// <auto-generated />
using System;
using Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(QL_CTVContext))]
    partial class QL_CTVContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasCharSet("latin1")
                .UseCollation("latin1_swedish_ci")
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("Data.Models.TCart", b =>
                {
                    b.Property<long>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)");

                    b.Property<decimal>("Amount")
                        .HasPrecision(20, 6)
                        .HasColumnType("decimal(20,6)");

                    b.Property<DateTime>("CreatedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("DiscountAmount")
                        .HasPrecision(20, 6)
                        .HasColumnType("decimal(20,6)");

                    b.Property<double>("DiscountRate")
                        .HasColumnType("double")
                        .HasComment("Tỉ lệ chiết khấu");

                    b.Property<ulong>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'0'");

                    b.Property<DateTime>("ModifiedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("''");

                    b.Property<long?>("OrderId")
                        .HasColumnType("bigint(20)")
                        .HasComment("Filed này sẽ update khi user create Order");

                    b.Property<decimal>("Price")
                        .HasPrecision(20, 6)
                        .HasColumnType("decimal(20,6)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("Qty")
                        .HasColumnType("int")
                        .HasComment("Số lượng");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint(20)");

                    b.HasKey("CartId")
                        .HasName("PRIMARY");

                    b.ToTable("T_Cart");
                });

            modelBuilder.Entity("Data.Models.TCategory", b =>
                {
                    b.Property<long>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("CreatedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<ulong>("IsDelete")
                        .HasColumnType("bit(1)");

                    b.Property<DateTime?>("ModifiedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NameCategory")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int(11)");

                    b.Property<ulong>("ShopId")
                        .HasColumnType("bit(1)")
                        .HasComment("Mỗi shop có category riêng");

                    b.HasKey("CategoryId")
                        .HasName("PRIMARY");

                    b.ToTable("T_Category");
                });

            modelBuilder.Entity("Data.Models.TCustomer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<sbyte>("CustomerTypeId")
                        .HasColumnType("tinyint(4)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<sbyte>("GenderId")
                        .HasColumnType("tinyint(4)");

                    b.Property<ulong>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'0'")
                        .HasComment("Field này dùng để đánh dấu bản ghi đã bị xóa ");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("ModifiedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint(20)");

                    b.HasKey("CustomerId")
                        .HasName("PRIMARY");

                    b.ToTable("T_Customer");
                });

            modelBuilder.Entity("Data.Models.TDebt", b =>
                {
                    b.Property<long>("DebtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)");

                    b.Property<decimal?>("Advance")
                        .HasPrecision(20, 6)
                        .HasColumnType("decimal(20,6)")
                        .HasComment("Tiền tạm ứng");

                    b.Property<DateTime>("CreatedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeadlinedUtcDate")
                        .HasColumnType("datetime")
                        .HasComment("Hạn thanh toán");

                    b.Property<DateTime?>("ModifiedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<int>("OrderId")
                        .HasColumnType("int(11)");

                    b.Property<long>("ShopId")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint(20)");

                    b.HasKey("DebtId")
                        .HasName("PRIMARY");

                    b.ToTable("T_Debt");
                });

            modelBuilder.Entity("Data.Models.TOrder", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("CreatedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("ModifiedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<sbyte>("OrderStatusId")
                        .HasColumnType("tinyint(4)");

                    b.Property<decimal>("PaymentMethodId")
                        .HasPrecision(20, 6)
                        .HasColumnType("decimal(20,6)");

                    b.Property<long>("ShopId")
                        .HasColumnType("bigint(20)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(20, 6)
                        .HasColumnType("decimal(20,6)");

                    b.Property<decimal>("TotalDiscountAmount")
                        .HasPrecision(20, 6)
                        .HasColumnType("decimal(20,6)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint(20)");

                    b.HasKey("OrderId")
                        .HasName("PRIMARY");

                    b.ToTable("T_Order");
                });

            modelBuilder.Entity("Data.Models.TPayment", b =>
                {
                    b.Property<long>("PaymentId")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("CreatedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2500)
                        .HasColumnType("varchar(2500)")
                        .HasDefaultValueSql("''");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint(20)");

                    b.Property<decimal>("PaymentAmount")
                        .HasPrecision(20, 6)
                        .HasColumnType("decimal(20,6)");

                    b.Property<sbyte>("PaymentStatusId")
                        .HasColumnType("tinyint(4)");

                    b.HasKey("PaymentId")
                        .HasName("PRIMARY");

                    b.ToTable("T_Payment");
                });

            modelBuilder.Entity("Data.Models.TProduct", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("CreatedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2500)
                        .HasColumnType("varchar(2500)")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Images")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("json")
                        .HasDefaultValueSql("''")
                        .HasComment("Các ảnh lưu dạng mảng json");

                    b.Property<ulong>("IsDelete")
                        .HasColumnType("bit(1)");

                    b.Property<DateTime?>("ModifiedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Price")
                        .HasPrecision(20, 6)
                        .HasColumnType("decimal(20,6)")
                        .HasComment("Giá bán sản phẩm");

                    b.Property<sbyte>("ProductStatusId")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("json")
                        .HasDefaultValueSql("''")
                        .HasComment("Các thông tin lưu dạng json tùy define từng shop");

                    b.Property<long>("ShopId")
                        .HasColumnType("bigint(20)");

                    b.HasKey("ProductId")
                        .HasName("PRIMARY");

                    b.ToTable("T_Product");
                });

            modelBuilder.Entity("Data.Models.TProductCategory", b =>
                {
                    b.Property<long>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("CreatedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<ulong>("IsDelete")
                        .HasColumnType("bit(1)");

                    b.Property<DateTime?>("ModifiedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint(20)");

                    b.HasKey("ProductCategoryId")
                        .HasName("PRIMARY");

                    b.ToTable("T_ProductCategory");
                });

            modelBuilder.Entity("Data.Models.TProductInventory", b =>
                {
                    b.Property<long>("ProductInventoryId")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("CreatedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<double>("DiscountRate")
                        .HasColumnType("double")
                        .HasComment("Tỷ lệ rate theo từng đợt nhập kho");

                    b.Property<ulong>("IsDelete")
                        .HasColumnType("bit(1)");

                    b.Property<DateTime?>("ModifiedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasDefaultValueSql("'0'")
                        .HasComment("Ghi chú về lần nhập kho này");

                    b.Property<decimal>("Price")
                        .HasPrecision(20, 6)
                        .HasColumnType("decimal(20,6)")
                        .HasComment("Giá nhập kho");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("Qty")
                        .HasColumnType("int(11)")
                        .HasComment("Số lượng");

                    b.HasKey("ProductInventoryId")
                        .HasName("PRIMARY");

                    b.ToTable("T_ProductInventory");
                });

            modelBuilder.Entity("Data.Models.TRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("CreatedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<string>("GrantAccess")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("json")
                        .HasDefaultValueSql("''");

                    b.Property<ulong>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'0'");

                    b.Property<ulong>("IsSystemRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'0'");

                    b.Property<DateTime?>("ModifiedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("RoleId")
                        .HasName("PRIMARY");

                    b.ToTable("T_Role");
                });

            modelBuilder.Entity("Data.Models.TShop", b =>
                {
                    b.Property<long>("ShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("varchar(2500)");

                    b.Property<ulong>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'0'");

                    b.Property<DateTime>("ModifiedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<sbyte>("ShopStatusId")
                        .HasColumnType("tinyint(4)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint(20)");

                    b.HasKey("ShopId")
                        .HasName("PRIMARY");

                    b.ToTable("T_Shop");
                });

            modelBuilder.Entity("Data.Models.TShopUser", b =>
                {
                    b.Property<long>("ShopUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("CreatedUtcDate")
                        .HasColumnType("date");

                    b.Property<ulong>("IsDelete")
                        .HasColumnType("bit(1)");

                    b.Property<DateTime?>("RetiredUtcDate")
                        .HasColumnType("date");

                    b.Property<int>("RoleId")
                        .HasColumnType("int(11)");

                    b.Property<long>("ShopId")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint(20)");

                    b.HasKey("ShopUserId")
                        .HasName("PRIMARY");

                    b.ToTable("T_ShopUser");
                });

            modelBuilder.Entity("Data.Models.TUser", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("''");

                    b.Property<DateTime>("CreatedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<sbyte>("GenderId")
                        .HasColumnType("tinyint(4)");

                    b.Property<ulong>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'0'");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime>("ModifiedUtcDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("UserStatusId")
                        .HasColumnType("tinyint(4)");

                    b.HasKey("UserId")
                        .HasName("PRIMARY");

                    b.ToTable("T_User");
                });

            modelBuilder.Entity("Data.Models.TmCustomerType", b =>
                {
                    b.Property<sbyte>("CustomerLevelId")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("CustomerLevelName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CustomerLevelId")
                        .HasName("PRIMARY");

                    b.ToTable("TM_CustomerType");
                });

            modelBuilder.Entity("Data.Models.TmGender", b =>
                {
                    b.Property<sbyte>("GenderId")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("GenderId")
                        .HasName("PRIMARY");

                    b.ToTable("TM_Gender");
                });

            modelBuilder.Entity("Data.Models.TmOrderStatus", b =>
                {
                    b.Property<sbyte>("OrderStatusId")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("OrderStatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("OrderStatusId")
                        .HasName("PRIMARY");

                    b.ToTable("TM_OrderStatus");
                });

            modelBuilder.Entity("Data.Models.TmPaymentMethod", b =>
                {
                    b.Property<sbyte>("PaymentMethodId")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("PaymentMethodName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("''");

                    b.HasKey("PaymentMethodId")
                        .HasName("PRIMARY");

                    b.ToTable("TM_PaymentMethod");
                });

            modelBuilder.Entity("Data.Models.TmPaymentStatus", b =>
                {
                    b.Property<sbyte>("PaymentStatusId")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("PaymentStatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("PaymentStatusId")
                        .HasName("PRIMARY");

                    b.ToTable("TM_PaymentStatus");
                });

            modelBuilder.Entity("Data.Models.TmProductStatus", b =>
                {
                    b.Property<sbyte>("ProductStatusId")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("ProductStatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ProductStatusId")
                        .HasName("PRIMARY");

                    b.ToTable("TM_ProductStatus");
                });

            modelBuilder.Entity("Data.Models.TmShippingMethod", b =>
                {
                    b.Property<sbyte>("ShippingMethodId")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("ShippingMethodName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("''");

                    b.HasKey("ShippingMethodId")
                        .HasName("PRIMARY");

                    b.ToTable("TM_ShippingMethod");
                });

            modelBuilder.Entity("Data.Models.TmShopStatus", b =>
                {
                    b.Property<sbyte>("ShopStatusId")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("ShopStatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ShopStatusId")
                        .HasName("PRIMARY");

                    b.ToTable("TM_ShopStatus");
                });

            modelBuilder.Entity("Data.Models.TmUserLevel", b =>
                {
                    b.Property<sbyte>("UserLevelId")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("UserLevelName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserLevelId")
                        .HasName("PRIMARY");

                    b.ToTable("TM_UserLevel");
                });

            modelBuilder.Entity("Data.Models.TmUserStatus", b =>
                {
                    b.Property<sbyte>("UserStatusId")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("UserStatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserStatusId")
                        .HasName("PRIMARY");

                    b.ToTable("TM_UserStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
